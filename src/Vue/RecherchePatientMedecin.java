/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue;

import Controleur.LoginController;
import Controleur.ManipAndPhController;
import Modele.Login;
import Modele.Patient;
import java.awt.*;
import javax.swing.*;
import javax.swing.event.CellEditorListener;
import javax.swing.table.*;
import java.awt.Component;
import java.awt.event.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.EventObject;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author saman
 */
public class RecherchePatientMedecin extends javax.swing.JFrame {

    Controleur.ManipAndPhController mc;
    Modele.Login user;
    DefaultTableModel patientsModel;
    ArrayList<Patient> patients;
    
 public RecherchePatientMedecin(Login user, ManipAndPhController mc,  ArrayList<Patient> patients) {
     
        initComponents();
        this.setSize(1000, 600);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.mc = mc;
        this.user = user;
        this.patients = patients;
        this.updatePatients();
        accesDmrButton.setEnabled(false);
        ddnSelect.setVisible(false);
        SexGroup.add(HommeRB);
        SexGroup.add(FemmeRB);
        SexGroup.add(AutreRB);
        FemmeRB.setVisible(false);
        HommeRB.setVisible(false);
        AutreRB.setVisible(false);
        
    }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SexGroup = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        critere = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JRecherche = new javax.swing.JTable();
        rechercheText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        rechercheButton = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        accesDmrButton = new javax.swing.JButton();
        ddnSelect = new com.toedter.calendar.JDateChooser();
        FemmeRB = new javax.swing.JRadioButton();
        HommeRB = new javax.swing.JRadioButton();
        AutreRB = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        decoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setToolTipText("choisissez un critère de rechercher");
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N

        critere.setEditable(true);
        critere.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tous les patients", "Identifiant unique", "Nom", "Prénom", "Date de naissance", "Sexe" }));
        critere.setToolTipText("choisissez un critère de recherche");
        critere.setBorder(null);
        critere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                critereActionPerformed(evt);
            }
        });
        critere.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                criterePropertyChange(evt);
            }
        });

        JRecherche.setBackground(new java.awt.Color(228, 237, 246));
        JRecherche.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"d00bf4b4-96dc-474a-b18a-29b20196574b", "Titi", "Titi", "01/01/2001", "F"},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID patient", "Nom", "Prénom", "Date  de naissance", "Sexe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JRecherche.setFocusable(false);
        JRecherche.setRowHeight(30);
        JRecherche.setRowMargin(5);
        JRecherche.setSelectionForeground(new java.awt.Color(0, 0, 0));
        JRecherche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JRechercheMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JRecherche);
        JRecherche.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        rechercheText.setFont(new java.awt.Font("Yu Gothic UI Light", 2, 12)); // NOI18N
        rechercheText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rechercheText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechercheTextMouseClicked(evt);
            }
        });
        rechercheText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheTextActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vue/icons8_Search_Contacts_40px.png"))); // NOI18N
        jLabel1.setText("Rechercher un patient : ");

        rechercheButton.setBackground(new java.awt.Color(255, 255, 255));
        rechercheButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N
        rechercheButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vue/icons8_search_40px_2.png"))); // NOI18N
        rechercheButton.setText("Recherche");
        rechercheButton.setBorder(null);
        rechercheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheButtonActionPerformed(evt);
            }
        });

        error.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        error.setForeground(new java.awt.Color(255, 51, 0));

        accesDmrButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        accesDmrButton.setText("Accès DMR");
        accesDmrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accesDmrButtonActionPerformed(evt);
            }
        });

        FemmeRB.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        FemmeRB.setText("Femme");
        FemmeRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FemmeRBActionPerformed(evt);
            }
        });

        HommeRB.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        HommeRB.setText("Homme");
        HommeRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HommeRBActionPerformed(evt);
            }
        });

        AutreRB.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        AutreRB.setText("Autre");
        AutreRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutreRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rechercheText, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ddnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FemmeRB)
                        .addGap(18, 18, 18)
                        .addComponent(HommeRB)
                        .addGap(18, 18, 18)
                        .addComponent(AutreRB))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(accesDmrButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(critere, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(41, 41, 41)
                            .addComponent(rechercheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(critere, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rechercheButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rechercheText, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ddnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(FemmeRB)
                                .addComponent(HommeRB)
                                .addComponent(AutreRB)))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(accesDmrButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(666, 666, 666))
        );

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        backButton.setBackground(new java.awt.Color(153, 204, 255));
        backButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vue/icons8_back_40px.png"))); // NOI18N
        backButton.setText("Retour");
        backButton.setBorder(null);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        decoButton.setBackground(new java.awt.Color(153, 204, 255));
        decoButton.setFont(new java.awt.Font("Yu Gothic UI", 0, 13)); // NOI18N
        decoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vue/icons8_sign_out_40px_3.png"))); // NOI18N
        decoButton.setText("Déconnexion");
        decoButton.setBorder(null);
        decoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 663, Short.MAX_VALUE)
                .addComponent(decoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        mc.displayDashboard();
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void decoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decoButtonActionPerformed
        user = null;
        try {
            LoginController lc = new LoginController();
            this.dispose();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_decoButtonActionPerformed

    private void accesDmrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accesDmrButtonActionPerformed
        int row = JRecherche.getSelectedRow();
        String idPatient = JRecherche.getModel().getValueAt(row, 0).toString();

        if (idPatient != null){
            try {
                mc.displayDossierPatient(idPatient);
            } catch (SQLException ex) {
                Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.dispose();
    }//GEN-LAST:event_accesDmrButtonActionPerformed

    private void rechercheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheButtonActionPerformed
        String critereToFind = "";
        Date ddn = null;
        String recherche = rechercheText.getText().toLowerCase();
        switch(String.valueOf(critere.getSelectedItem())) {
            case ("Tous les patients"):
                critereToFind = "all";
                break;
            case ("Identifiant unique"):
                critereToFind = "patientId";
                break;
            case("Prénom"):
                critereToFind = "firstNameP";
                break;
            case ("Nom"):
                critereToFind = "lastNameP";
                break;
            case("Date de naissance"):
                critereToFind = "birthDate";
                ddn = ddnSelect.getDate();
                break;
        }
        if(critereToFind.equals("birthDate")) {
            System.out.println("recherche");
            patients = mc.recherchePatient(ddn);
        } else if (critereToFind.equals("all")) {
            try {
                patients = mc.listePatient();
            } catch (SQLException ex) {
                Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if (critereToFind.equals("all")) {
            try {
                patients = mc.listePatient();
            } catch (SQLException ex) {
                Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else {
            System.out.println(recherche);
            if(!recherche.equals("")) {
                try {
                    patients = mc.recherchePatient(critereToFind, recherche);
                    this.updatePatients();
                    error.setText(mc.getError());
                } catch (SQLException ex) {
                    Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                error.setText("Veuillez entrer une recherche");
            }
            
        }
        
    }//GEN-LAST:event_rechercheButtonActionPerformed

    private void rechercheTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheTextActionPerformed

    }//GEN-LAST:event_rechercheTextActionPerformed

    private void rechercheTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechercheTextMouseClicked
        rechercheText.setText("");
    }//GEN-LAST:event_rechercheTextMouseClicked

    private void JRechercheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JRechercheMouseClicked
        accesDmrButton.setEnabled(true);
    }//GEN-LAST:event_JRechercheMouseClicked

    private void criterePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_criterePropertyChange

    }//GEN-LAST:event_criterePropertyChange

    private void critereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_critereActionPerformed
        error.setText("");
        if(critere.getSelectedIndex() == 4) {
            rechercheButton.setVisible(true);
            ddnSelect.setVisible(true);
            rechercheText.setVisible(false);
            FemmeRB.setVisible(false);
            HommeRB.setVisible(false);
            AutreRB.setVisible(false);
        } else if (critere.getSelectedIndex() == 5) {   
            rechercheButton.setVisible(false);
            rechercheText.setVisible(false);
            ddnSelect.setVisible(false);
            FemmeRB.setVisible(true);
            HommeRB.setVisible(true);
            AutreRB.setVisible(true);
            FemmeRB.setSelected(true);
            try {
                patients = mc.recherchePatient("gender", "F");
                updatePatients();
            } catch (SQLException ex) {
                Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
            }
            
         }else {
            rechercheButton.setVisible(true);
            ddnSelect.setVisible(false);
            rechercheText.setVisible(true);
            FemmeRB.setVisible(false);
            HommeRB.setVisible(false);
            AutreRB.setVisible(false);
        }
    }//GEN-LAST:event_critereActionPerformed

    private void FemmeRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FemmeRBActionPerformed
        try {
            patients = mc.recherchePatient("gender", "F");
            updatePatients();
        } catch (SQLException ex) {
            Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }//GEN-LAST:event_FemmeRBActionPerformed

    private void HommeRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HommeRBActionPerformed
        try {
                patients = mc.recherchePatient("gender", "H");
                updatePatients();
            } catch (SQLException ex) {
                Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_HommeRBActionPerformed

    private void AutreRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutreRBActionPerformed
        try {
                patients = mc.recherchePatient("gender", "A");
                updatePatients();
            } catch (SQLException ex) {
                Logger.getLogger(RecherchePatientMedecin.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_AutreRBActionPerformed
    
    
    public void updatePatients() {
        String col[] = {"Identifiant","Nom","Prénom", "Adresse", "Date de naissance", "Sexe"};

        this.patientsModel = new DefaultTableModel(col, 0);

        JRecherche.setModel(patientsModel);
        if(patients.size() > 0) {
            for (int i = 0; i < patients.size(); i++) {
                String id = patients.get(i).getPatientId().trim();
                String lastName = patients.get(i).getLastNameP().toUpperCase().trim();
                String firstName = patients.get(i).getFirstNameP().substring(0, 1).toUpperCase() + patients.get(i).getFirstNameP().substring(1).trim();
                String adress = patients.get(i).getAdress().trim();
                Date bod = patients.get(i).getDdn();
                String gender = patients.get(i).getGender();
                Object[] data = {id , lastName, firstName, adress, bod, gender};
                patientsModel.addRow(data);
            }
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecherchePatientMedecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecherchePatientMedecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecherchePatientMedecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecherchePatientMedecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AutreRB;
    private javax.swing.JRadioButton FemmeRB;
    private javax.swing.JRadioButton HommeRB;
    private javax.swing.JTable JRecherche;
    private javax.swing.ButtonGroup SexGroup;
    private javax.swing.JButton accesDmrButton;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> critere;
    private com.toedter.calendar.JDateChooser ddnSelect;
    private javax.swing.JButton decoButton;
    private javax.swing.JLabel error;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rechercheButton;
    private javax.swing.JTextField rechercheText;
    // End of variables declaration//GEN-END:variables
}
   
